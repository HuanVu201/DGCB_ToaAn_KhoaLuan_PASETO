// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TD.DanhGiaCanBo.Infrastructure.Persistence.Context;

#nullable disable

namespace Migrators.MSSQL.Migrations.Application
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("Catalog")
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenantId")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("UserClaims", "Identity");

                    b.HasAnnotation("Finbuckle:MultiTenant", true);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProviderKey")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("TenantId")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.HasIndex("LoginProvider", "ProviderKey", "TenantId")
                        .IsUnique();

                    b.ToTable("UserLogins", "Identity");

                    b.HasAnnotation("Finbuckle:MultiTenant", true);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("TenantId")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("UserTokens", "Identity");

                    b.HasAnnotation("Finbuckle:MultiTenant", true);
                });

            modelBuilder.Entity("TD.DanhGiaCanBo.Domain.Business.Action", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ApplyForUserGroups")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("ApplyForUsers")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("ColorCode")
                        .HasMaxLength(10)
                        .HasColumnType("varchar");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("IconName")
                        .HasMaxLength(50)
                        .HasColumnType("varchar");

                    b.Property<Guid?>("LastModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Ma")
                        .HasMaxLength(50)
                        .HasColumnType("varchar");

                    b.Property<string>("MoTa")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("Quyen")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<bool?>("ShowInModal")
                        .HasColumnType("bit");

                    b.Property<bool?>("ShowInTable")
                        .HasColumnType("bit");

                    b.Property<string>("Ten")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("ThuTu")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Ten")
                        .HasDatabaseName("Idx_Action");

                    b.ToTable("Actions", "Business");
                });

            modelBuilder.Entity("TD.DanhGiaCanBo.Domain.Business.BoTieuChuan", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CapDanhGia")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int?>("CauHinhThoiGianGiaHan")
                        .HasColumnType("int");

                    b.Property<string>("CoQuanBanHanh")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DenNgay")
                        .HasColumnType("datetime2");

                    b.Property<string>("DinhKem")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("DonVi")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("DonViDanhGia")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<bool?>("LaDonVi")
                        .HasColumnType("bit");

                    b.Property<Guid?>("LastModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("LoaiThoiGian")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("MaBoTieuChi")
                        .HasMaxLength(100)
                        .HasColumnType("VARCHAR");

                    b.Property<string>("MaCapDanhGia")
                        .HasMaxLength(100)
                        .HasColumnType("VARCHAR");

                    b.Property<string>("MaDonViDanhGia")
                        .HasMaxLength(1000)
                        .HasColumnType("VARCHAR");

                    b.Property<string>("NgayBanHanh")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("SoKyHieu")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("SuDung")
                        .HasColumnType("bit");

                    b.Property<string>("TenBoTieuChi")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("ThoiGian")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<DateTime?>("TuNgay")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("BoTieuChuans", "Business");
                });

            modelBuilder.Entity("TD.DanhGiaCanBo.Domain.Business.BuocXuLy", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("CungDonVi")
                        .HasColumnType("bit");

                    b.Property<bool>("CungPhongBan")
                        .HasColumnType("bit");

                    b.Property<bool>("Deletable")
                        .HasColumnType("bit");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Dragging")
                        .HasColumnType("bit");

                    b.Property<int>("Height")
                        .HasColumnType("int");

                    b.Property<bool>("KhongCoChucDanh")
                        .HasColumnType("bit");

                    b.Property<bool>("KhongCoChucVu")
                        .HasColumnType("bit");

                    b.Property<bool>("LaBuocCuoiCung")
                        .HasColumnType("bit");

                    b.Property<bool>("LaBuocDauTien")
                        .HasColumnType("bit");

                    b.Property<Guid?>("LastModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("LayDonViCapTren")
                        .HasColumnType("bit");

                    b.Property<bool>("LayNguoiQuanLy")
                        .HasColumnType("bit");

                    b.Property<double>("PositionAbsoluteX")
                        .HasColumnType("float");

                    b.Property<double>("PositionAbsoluteY")
                        .HasColumnType("float");

                    b.Property<double>("PositionX")
                        .HasColumnType("float");

                    b.Property<double>("PositionY")
                        .HasColumnType("float");

                    b.Property<Guid>("QuyTrinhXuLyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Selected")
                        .HasColumnType("bit");

                    b.Property<string>("TenBuoc")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<double?>("ThoiHanXuLy")
                        .HasColumnType("float");

                    b.Property<Guid>("TrangThaiDanhGiaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar");

                    b.Property<int>("Width")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("QuyTrinhXuLyId");

                    b.HasIndex("TrangThaiDanhGiaId");

                    b.HasIndex("LaBuocCuoiCung", "QuyTrinhXuLyId");

                    b.HasIndex("LaBuocDauTien", "QuyTrinhXuLyId");

                    b.ToTable("BuocXuLys", "Business");
                });

            modelBuilder.Entity("TD.DanhGiaCanBo.Domain.Business.BuocXuLyChucDanh", b =>
                {
                    b.Property<Guid>("ChucDanhId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("BuocXuLyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ChucDanhId", "BuocXuLyId");

                    b.HasIndex("BuocXuLyId");

                    b.ToTable("BuocXuLyChucDanhs", "Business");
                });

            modelBuilder.Entity("TD.DanhGiaCanBo.Domain.Business.BuocXuLyChucVu", b =>
                {
                    b.Property<Guid>("ChucVuId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("BuocXuLyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ChucVuId", "BuocXuLyId");

                    b.HasIndex("BuocXuLyId");

                    b.ToTable("BuocXuLyChucVus", "Business");
                });

            modelBuilder.Entity("TD.DanhGiaCanBo.Domain.Business.BuocXuLyGroup", b =>
                {
                    b.Property<Guid>("NhomDonViId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("BuocXuLyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("NhomDonViId", "BuocXuLyId");

                    b.HasIndex("BuocXuLyId");

                    b.ToTable("BuocXuLyGroups", "Business");
                });

            modelBuilder.Entity("TD.DanhGiaCanBo.Domain.Business.BuocXuLyNhomNguoiDung", b =>
                {
                    b.Property<Guid>("BuocXuLyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("NhomNguoiDungId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("BuocXuLyId", "NhomNguoiDungId");

                    b.HasIndex("NhomNguoiDungId");

                    b.ToTable("BuocXuLyNhomNguoiDungs", "Business");
                });

            modelBuilder.Entity("TD.DanhGiaCanBo.Domain.Business.ChiTietDanhGia", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ChiTietDiemDanhGia")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ChiTietDiemLanhDaoDanhGia")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ChiTietDiemNhanXet")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ChiTietDiemThamMuu")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ChiTietDiemTuDanhGia")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("DataKhieuNai")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DataLanhDaoDanhGia")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DataNhanXet")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DataThamMuu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DataTuDanhGia")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DataXuLyKhieuNai")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<double?>("DiemDanhGia")
                        .HasColumnType("float");

                    b.Property<double?>("DiemLanhDaoDanhGia")
                        .HasColumnType("float");

                    b.Property<double?>("DiemNhanXet")
                        .HasColumnType("float");

                    b.Property<double?>("DiemThamMuu")
                        .HasColumnType("float");

                    b.Property<double?>("DiemTuDanhGia")
                        .HasColumnType("float");

                    b.Property<bool?>("HasDiemLietLanhDaoDanhGia")
                        .HasColumnType("bit");

                    b.Property<bool?>("HasDiemLietNhanXet")
                        .HasColumnType("bit");

                    b.Property<bool?>("HasDiemLietThamMuu")
                        .HasColumnType("bit");

                    b.Property<bool?>("HasDiemLietTuDanhGia")
                        .HasColumnType("bit");

                    b.Property<Guid?>("LastModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("MaMauPhieu")
                        .HasMaxLength(100)
                        .HasColumnType("VARCHAR");

                    b.Property<string>("MaPhieu")
                        .HasMaxLength(100)
                        .HasColumnType("VARCHAR");

                    b.Property<string>("ScorePoint")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<int?>("SoLuongKhieuNai")
                        .HasColumnType("int");

                    b.Property<string>("TenMauPhieu")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int?>("ThuTu")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("ChiTietDanhGias", "Business");
                });

            modelBuilder.Entity("TD.DanhGiaCanBo.Domain.Business.ChiTietDanhGiaDonVi", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ChiTietDiemDanhGia")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ChiTietDiemLanhDaoDanhGia")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ChiTietDiemThamMuu")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ChiTietDiemTuDanhGia")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("DataLanhDaoDanhGia")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DataThamMuu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DataTuDanhGia")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<double?>("DiemDanhGia")
                        .HasColumnType("float");

                    b.Property<double?>("DiemLanhDaoDanhGia")
                        .HasColumnType("float");

                    b.Property<double?>("DiemThamMuu")
                        .HasColumnType("float");

                    b.Property<double?>("DiemTuDanhGia")
                        .HasColumnType("float");

                    b.Property<bool?>("HasDiemLietLanhDaoDanhGia")
                        .HasColumnType("bit");

                    b.Property<bool?>("HasDiemLietThamMuu")
                        .HasColumnType("bit");

                    b.Property<bool?>("HasDiemLietTuDanhGia")
                        .HasColumnType("bit");

                    b.Property<Guid?>("LastModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("MaMauPhieu")
                        .HasMaxLength(100)
                        .HasColumnType("VARCHAR");

                    b.Property<string>("MaPhieu")
                        .HasMaxLength(100)
                        .HasColumnType("VARCHAR");

                    b.Property<string>("ScorePoint")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("TenMauPhieu")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int?>("ThuTu")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("ChiTietDanhGiaDonVis", "Business");
                });

            modelBuilder.Entity("TD.DanhGiaCanBo.Domain.Business.ChucDanh", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("LastModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Ma")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("VARCHAR");

                    b.Property<string>("MaCapDanhGia")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MoTa")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Ten")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("TenCapDanhGia")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ChucDanhs", "Business");
                });

            modelBuilder.Entity("TD.DanhGiaCanBo.Domain.Business.ChucDanhMauPhieuDanhGia", b =>
                {
                    b.Property<Guid>("ChucDanhId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("MauPhieuDanhGiaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ChucDanhId", "MauPhieuDanhGiaId");

                    b.HasIndex("MauPhieuDanhGiaId");

                    b.ToTable("ChucDanhMauPhieuDanhGias", "Business");
                });

            modelBuilder.Entity("TD.DanhGiaCanBo.Domain.Business.ChucVu", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("LastModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Ma")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("VARCHAR");

                    b.Property<string>("MaCapDanhGia")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MoTa")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Ten")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("TenCapDanhGia")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ChucVus", "Business");
                });

            modelBuilder.Entity("TD.DanhGiaCanBo.Domain.Business.DanhGia", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ApplicationUserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<Guid?>("BuocHienTaiId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("BuocTruocId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ChiTietDiemDanhGia")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ChucDanh")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("ChucVu")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("DaXem")
                        .HasMaxLength(1)
                        .HasColumnType("VARCHAR");

                    b.Property<string>("DanhSachPhanLoaiDanhGia")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<double?>("DiemDanhGia")
                        .HasColumnType("float");

                    b.Property<double?>("DiemLanhDaoDanhGia")
                        .HasColumnType("float");

                    b.Property<double?>("DiemNhanXet")
                        .HasColumnType("float");

                    b.Property<double?>("DiemThamMuu")
                        .HasColumnType("float");

                    b.Property<double?>("DiemTuDanhGia")
                        .HasColumnType("float");

                    b.Property<string>("Email")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("FileDinhKem")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FileDinhKemDG")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FileDinhKemNX")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FileDinhKemTM")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HoVaTen")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<bool?>("IsKySoCaNhan")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsKySoLanhDao")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsKySoNhanXet")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsKySoThamMuu")
                        .HasColumnType("bit");

                    b.Property<bool?>("KhongDanhGia")
                        .HasColumnType("bit");

                    b.Property<bool?>("KiemNhiem")
                        .HasColumnType("bit");

                    b.Property<Guid?>("LastModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("LoaiDanhGia")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("LoaiThoiGian")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("LyDoThayDoiXepLoai")
                        .HasMaxLength(3000)
                        .HasColumnType("nvarchar(3000)");

                    b.Property<string>("MaBoTieuChuan")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MaDonVi")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("MaDonViCha")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("MaDonViFull")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("MaHoSo")
                        .HasMaxLength(100)
                        .HasColumnType("VARCHAR");

                    b.Property<string>("MaMauPhieuDanhGia")
                        .HasMaxLength(200)
                        .HasColumnType("VARCHAR");

                    b.Property<string>("MaNguoiDung")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("MaPhieu")
                        .HasMaxLength(50)
                        .HasColumnType("VARCHAR");

                    b.Property<string>("MaPhongBan")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int?>("NamDanhGia")
                        .HasColumnType("int");

                    b.Property<DateTime?>("NgaySuaUser")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("NgayTaoUser")
                        .HasColumnType("datetime2");

                    b.Property<string>("NguoiDangXuLyId")
                        .HasMaxLength(36)
                        .HasColumnType("varchar");

                    b.Property<string>("NguoiDanhGia")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("NguoiDanhGiaId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NguoiNhanXet")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("NguoiNhanXetId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NguoiSuaUser")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("NguoiTaoUser")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("NguoiThamMuu")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("NguoiThamMuuId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NguoiTuDanhGia")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("NguoiTuDanhGiaId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PhanLoaiDanhGia")
                        .HasMaxLength(70)
                        .HasColumnType("nvarchar(70)");

                    b.Property<string>("PhanLoaiLanhDaoDanhGia")
                        .HasMaxLength(70)
                        .HasColumnType("nvarchar(70)");

                    b.Property<string>("PhanLoaiNhanXet")
                        .HasMaxLength(70)
                        .HasColumnType("nvarchar(70)");

                    b.Property<string>("PhanLoaiThamMuu")
                        .HasMaxLength(70)
                        .HasColumnType("nvarchar(70)");

                    b.Property<string>("PhanLoaiTuDanhGia")
                        .HasMaxLength(70)
                        .HasColumnType("nvarchar(70)");

                    b.Property<string>("Phone")
                        .HasMaxLength(50)
                        .HasColumnType("VARCHAR");

                    b.Property<string>("QuyTrinhXuLyId")
                        .HasMaxLength(50)
                        .HasColumnType("VARCHAR");

                    b.Property<bool?>("SuDung")
                        .HasColumnType("bit");

                    b.Property<string>("TaiKhoan")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("TenBoTieuChuan")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("TenDonVi")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("TenMauPhieuDanhGia")
                        .HasMaxLength(1500)
                        .HasColumnType("nvarchar(1500)");

                    b.Property<string>("TenPhongBan")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("ThamQuyenXepLoai")
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.Property<string>("ThoiGian")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<DateTime?>("ThoiGianDanhGia")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ThoiGianHDDanhGia")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ThoiGianNhanXet")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ThoiGianQuery")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ThoiGianTao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ThoiGianThamMuu")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ThuTu")
                        .HasColumnType("int");

                    b.Property<string>("TrangThai")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int?>("TruongDonVi")
                        .HasColumnType("int");

                    b.Property<string>("UrlDocx")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("UrlPdf")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("YKienDanhGia")
                        .HasMaxLength(3000)
                        .HasColumnType("nvarchar(3000)");

                    b.Property<string>("YKienLanhDao")
                        .HasMaxLength(3000)
                        .HasColumnType("nvarchar(3000)");

                    b.Property<string>("YKienNhanXet")
                        .HasMaxLength(3000)
                        .HasColumnType("nvarchar(3000)");

                    b.Property<string>("YKienThamMuu")
                        .HasMaxLength(3000)
                        .HasColumnType("nvarchar(3000)");

                    b.Property<string>("YKienTuDanhGia")
                        .HasMaxLength(3000)
                        .HasColumnType("nvarchar(3000)");

                    b.HasKey("Id");

                    b.HasIndex("ApplicationUserId");

                    b.HasIndex("BuocHienTaiId");

                    b.HasIndex("BuocTruocId");

                    b.ToTable("DanhGias", "Business");
                });

            modelBuilder.Entity("TD.DanhGiaCanBo.Domain.Business.DanhGiaDonVi", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("BuocHienTaiId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("BuocTruocId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ChiTietDiemDanhGia")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("DaXem")
                        .HasMaxLength(1)
                        .HasColumnType("VARCHAR");

                    b.Property<string>("DanhSachPhanLoaiDanhGia")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<double?>("DiemDanhGia")
                        .HasColumnType("float");

                    b.Property<double?>("DiemLanhDaoDanhGia")
                        .HasColumnType("float");

                    b.Property<double?>("DiemThamMuu")
                        .HasColumnType("float");

                    b.Property<double?>("DiemTuDanhGia")
                        .HasColumnType("float");

                    b.Property<string>("FileDinhKem")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FileDinhKemDG")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FileDinhKemTM")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsKySoDonVi")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsKySoLanhDao")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsKySoThamMuu")
                        .HasColumnType("bit");

                    b.Property<Guid?>("LastModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("LoaiThoiGian")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("MaBoTieuChuan")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MaDonVi")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("MaDonViCha")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("MaMauPhieuDanhGia")
                        .HasMaxLength(200)
                        .HasColumnType("VARCHAR");

                    b.Property<string>("MaPhieu")
                        .HasMaxLength(50)
                        .HasColumnType("VARCHAR");

                    b.Property<string>("MaPhongBan")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int?>("NamDanhGia")
                        .HasColumnType("int");

                    b.Property<string>("NguoiDangXuLyId")
                        .HasMaxLength(36)
                        .HasColumnType("varchar");

                    b.Property<string>("NguoiDanhGia")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("NguoiDanhGiaId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NguoiThamMuu")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("NguoiThamMuuId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NguoiTuDanhGia")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("NguoiTuDanhGiaId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PhanLoaiDanhGia")
                        .HasMaxLength(70)
                        .HasColumnType("nvarchar(70)");

                    b.Property<string>("PhanLoaiLanhDaoDanhGia")
                        .HasMaxLength(70)
                        .HasColumnType("nvarchar(70)");

                    b.Property<string>("PhanLoaiThamMuu")
                        .HasMaxLength(70)
                        .HasColumnType("nvarchar(70)");

                    b.Property<string>("PhanLoaiTuDanhGia")
                        .HasMaxLength(70)
                        .HasColumnType("nvarchar(70)");

                    b.Property<string>("QuyTrinhXuLyId")
                        .HasMaxLength(50)
                        .HasColumnType("VARCHAR");

                    b.Property<bool?>("SuDung")
                        .HasColumnType("bit");

                    b.Property<string>("TenBoTieuChuan")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("TenDonVi")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("TenMauPhieuDanhGia")
                        .HasMaxLength(1500)
                        .HasColumnType("nvarchar(1500)");

                    b.Property<string>("TenPhongBan")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("ThoiGian")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<DateTime?>("ThoiGianDanhGia")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ThoiGianQuery")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ThoiGianTao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ThoiGianThamMuu")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ThuTu")
                        .HasColumnType("int");

                    b.Property<string>("TrangThai")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("UrlDocx")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("UrlPdf")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("YKienDanhGia")
                        .HasMaxLength(3000)
                        .HasColumnType("nvarchar(3000)");

                    b.Property<string>("YKienLanhDao")
                        .HasMaxLength(3000)
                        .HasColumnType("nvarchar(3000)");

                    b.Property<string>("YKienThamMuu")
                        .HasMaxLength(3000)
                        .HasColumnType("nvarchar(3000)");

                    b.Property<string>("YKienTuDanhGia")
                        .HasMaxLength(3000)
                        .HasColumnType("nvarchar(3000)");

                    b.HasKey("Id");

                    b.HasIndex("BuocHienTaiId");

                    b.HasIndex("BuocTruocId");

                    b.ToTable("DanhGiaDonVis", "Business");
                });

            modelBuilder.Entity("TD.DanhGiaCanBo.Domain.Business.DanhSachNhomDonVi", b =>
                {
                    b.Property<string>("GroupCode")
                        .HasMaxLength(50)
                        .HasColumnType("VARCHAR");

                    b.Property<Guid>("NhomDonViId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("GroupCode", "NhomDonViId");

                    b.HasIndex("NhomDonViId");

                    b.ToTable("DanhSachNhomDonVis", "Business");
                });

            modelBuilder.Entity("TD.DanhGiaCanBo.Domain.Business.DonViSuDungQuyTrinhXuLy", b =>
                {
                    b.Property<Guid>("QuyTrinhXuLyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("OfficeCode")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("QuyTrinhXuLyId", "OfficeCode");

                    b.HasIndex("OfficeCode");

                    b.ToTable("DonViSuDungQuyTrinhXuLys", "Business");
                });

            modelBuilder.Entity("TD.DanhGiaCanBo.Domain.Business.DuLieuThongKe", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Category")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CongViecChuaHoanThanh")
                        .HasColumnType("int");

                    b.Property<int?>("CongViecDaHoanThanh")
                        .HasColumnType("int");

                    b.Property<int?>("CongViecDangXuLy")
                        .HasColumnType("int");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DanhGiaLoaiA")
                        .HasColumnType("int");

                    b.Property<int?>("DanhGiaLoaiB")
                        .HasColumnType("int");

                    b.Property<int?>("DanhGiaLoaiC")
                        .HasColumnType("int");

                    b.Property<int?>("DanhGiaLoaiD")
                        .HasColumnType("int");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("FullMa")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int?>("KhenThuong")
                        .HasColumnType("int");

                    b.Property<int?>("KhenThuongDeXuat")
                        .HasColumnType("int");

                    b.Property<Guid?>("LastModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("LoaiThoiGian")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("LoaiThongKe")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("MaDonVi")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("MaDonViCha")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("NamDanhGia")
                        .HasColumnType("int");

                    b.Property<string>("TenDonVi")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ThoiGian")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<int?>("ThoiGianQuery")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ThoiGianTao")
                        .HasColumnType("datetime2");

                    b.Property<int?>("TongSoCanBo")
                        .HasColumnType("int");

                    b.Property<int?>("TongSoCongViec")
                        .HasColumnType("int");

                    b.Property<int?>("TongSoDaXepLoai")
                        .HasColumnType("int");

                    b.Property<int?>("TongSoKhongDanhGia")
                        .HasColumnType("int");

                    b.Property<int?>("TongSoTuDanhGia")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("DuLieuThongKes", "Business");
                });

            modelBuilder.Entity("TD.DanhGiaCanBo.Domain.Business.GiaHanDanhGia", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DenNgay")
                        .HasColumnType("datetime2");

                    b.Property<string>("DinhKem")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<Guid?>("LastModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("MaBoTieuChi")
                        .HasMaxLength(100)
                        .HasColumnType("VARCHAR");

                    b.Property<string>("MaDonVi")
                        .HasMaxLength(50)
                        .HasColumnType("VARCHAR");

                    b.Property<string>("MaDonViCha")
                        .HasMaxLength(50)
                        .HasColumnType("VARCHAR");

                    b.Property<string>("NoiDung")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("TenBoTieuChi")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("TrangThai")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<DateTime?>("TuNgay")
                        .HasColumnType("datetime2");

                    b.Property<string>("YKien")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.HasKey("Id");

                    b.ToTable("GiaHanDanhGias", "Business");
                });

            modelBuilder.Entity("TD.DanhGiaCanBo.Domain.Business.HoSoCongTacDanhGia", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("DKBanKiemDiem")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("DKBanNhanXetCapUy")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("DKBienBanHoiNghiKiemDiem")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("DKCacVanBanKhac")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("DKHoSoGiaiQuyetKhieuNaiKienNghi")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("DKKetLuanDanhGiaXepLoai")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("DKKetQuaThamDinhCuaCoQuanThamMuu")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("DKVanBanGoiYKiemDiem")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("DKVanBanThamGiaGopY")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("DanhGiaId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("LastModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("MaDonVi")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("TenDonVi")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("TenHoSo")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.HasKey("Id");

                    b.ToTable("HoSoCongTacDanhGias", "Business");
                });

            modelBuilder.Entity("TD.DanhGiaCanBo.Domain.Business.KhieuNaiDanhGia", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("DinhKemKetQua")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("DinhKemKhieuNai")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("KetQua")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<Guid?>("LastModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("LyDo")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("MaDonVi")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("MaDonViCha")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("MaPhieu")
                        .HasMaxLength(50)
                        .HasColumnType("VARCHAR");

                    b.Property<string>("NguoiCapNhatKQId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("SoLuongKhieuNai")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ThoiGianCapNhat")
                        .HasColumnType("datetime2");

                    b.Property<string>("TrangThai")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("Id");

                    b.ToTable("KhieuNaiDanhGias", "Business");
                });

            modelBuilder.Entity("TD.DanhGiaCanBo.Domain.Business.KhoTieuChi", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("DiemLiet")
                        .HasColumnType("bit");

                    b.Property<bool?>("DiemThuong")
                        .HasColumnType("bit");

                    b.Property<bool?>("DiemTru")
                        .HasColumnType("bit");

                    b.Property<string>("DonViTinh")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool?>("DuocChamNhieuLan")
                        .HasColumnType("bit");

                    b.Property<string>("FullCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GhiChu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("JsonDiemLiet")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("JsonLienKet")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("KiemNhiem")
                        .HasColumnType("bit");

                    b.Property<Guid?>("LastModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("LoaiDiem")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MaTieuChi")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("VARCHAR");

                    b.Property<string>("ParrentCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ParrentName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("STT")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SoLan")
                        .HasColumnType("int");

                    b.Property<bool>("SuDung")
                        .HasColumnType("bit");

                    b.Property<string>("TenTieuChi")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("ThangDiem")
                        .HasMaxLength(10)
                        .HasColumnType("VARCHAR");

                    b.Property<int?>("ThuTu")
                        .HasColumnType("int");

                    b.Property<bool?>("TieuChiLienKet")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("KhoTieuChis", "Business");
                });

            modelBuilder.Entity("TD.DanhGiaCanBo.Domain.Business.KyDanhGia", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DenNgayDanhGia")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("LastModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Ma")
                        .HasMaxLength(100)
                        .HasColumnType("VARCHAR");

                    b.Property<string>("Ten")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("ThoiGianGiaHan")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("TuNgayDanhGia")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("KyDanhGias", "Business");
                });

            modelBuilder.Entity("TD.DanhGiaCanBo.Domain.Business.LienKetBuocXuLy", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Animated")
                        .HasColumnType("bit");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Label")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<Guid?>("LastModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("MarkerEndType")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar");

                    b.Property<Guid>("QuyTrinhXuLyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("Source")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("SourceHandle")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar");

                    b.Property<string>("StyleStroke")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("varchar");

                    b.Property<int>("StyleStrokeWidth")
                        .HasColumnType("int");

                    b.Property<Guid>("Target")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("TargetHandle")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar");

                    b.HasKey("Id");

                    b.HasIndex("QuyTrinhXuLyId");

                    b.HasIndex("Source");

                    b.HasIndex("Target");

                    b.ToTable("LienKetBuocXuLys", "Business");
                });

            modelBuilder.Entity("TD.DanhGiaCanBo.Domain.Business.LoaiMauPhoi", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("LastModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("LoaiPhoi")
                        .HasMaxLength(100)
                        .HasColumnType("varchar");

                    b.Property<string>("MaMauPhoi")
                        .HasMaxLength(200)
                        .HasColumnType("varchar");

                    b.Property<string>("TenMaMauPhoi")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.HasKey("Id");

                    b.ToTable("LoaiMauPhois", "Business");
                });

            modelBuilder.Entity("TD.DanhGiaCanBo.Domain.Business.MauPhieuDanhGia", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CaNhanDanhGia")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("CapDanhGia")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("DataTieuChi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DiemDatYeuCau")
                        .HasColumnType("int");

                    b.Property<int?>("DiemThuong")
                        .HasColumnType("int");

                    b.Property<int?>("DiemTru")
                        .HasColumnType("int");

                    b.Property<string>("DinhKem")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DonViDanhGia")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<Guid?>("LastModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("LevelBoTieuChi")
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.Property<string>("Ma")
                        .HasMaxLength(100)
                        .HasColumnType("VARCHAR");

                    b.Property<string>("MaBoTieuChi")
                        .HasMaxLength(100)
                        .HasColumnType("VARCHAR");

                    b.Property<string>("MaCaNhanDanhGia")
                        .HasMaxLength(1000)
                        .HasColumnType("VARCHAR");

                    b.Property<string>("MaCapDanhGia")
                        .HasMaxLength(100)
                        .HasColumnType("VARCHAR");

                    b.Property<string>("MaChucDanhDanhGia")
                        .HasMaxLength(1000)
                        .HasColumnType("VARCHAR");

                    b.Property<string>("MaChucVuDanhGia")
                        .HasMaxLength(1000)
                        .HasColumnType("VARCHAR");

                    b.Property<string>("MaDonViDanhGia")
                        .HasMaxLength(1000)
                        .HasColumnType("VARCHAR");

                    b.Property<string>("MauImportDanhGia")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<bool?>("SuDung")
                        .HasColumnType("bit");

                    b.Property<string>("Ten")
                        .HasMaxLength(400)
                        .HasColumnType("nvarchar(400)");

                    b.Property<string>("TenChucDanhDanhGia")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("TenChucVuDanhGia")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<int?>("ThuTu")
                        .HasColumnType("int");

                    b.Property<string>("XepLoai")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("MauPhieuDanhGias", "Business");
                });

            modelBuilder.Entity("TD.DanhGiaCanBo.Domain.Business.MauPhoi", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("CustomerId")
                        .HasMaxLength(50)
                        .HasColumnType("varchar");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("LaPhoiMacDinh")
                        .HasColumnType("bit");

                    b.Property<Guid?>("LastModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("LoaiPhoi")
                        .HasMaxLength(100)
                        .HasColumnType("varchar");

                    b.Property<string>("MaDonVi")
                        .HasMaxLength(1000)
                        .HasColumnType("varchar");

                    b.Property<string>("MaMauPhoi")
                        .HasMaxLength(200)
                        .HasColumnType("varchar");

                    b.Property<string>("TenMauPhoi")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("UrlMauPhoi")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.HasKey("Id");

                    b.ToTable("MauPhois", "Business");
                });

            modelBuilder.Entity("TD.DanhGiaCanBo.Domain.Business.NhomDonVi", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("LastModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("MoTa")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("TenNhom")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.ToTable("NhomDonVis", "Business");
                });

            modelBuilder.Entity("TD.DanhGiaCanBo.Domain.Business.QuyTrinhXuLy", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("LaQuyTrinhDonVi")
                        .HasColumnType("bit");

                    b.Property<Guid?>("LastModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("TenQuyTrinh")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("ThuTu")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("LaQuyTrinhDonVi");

                    b.ToTable("QuyTrinhXuLys", "Business");
                });

            modelBuilder.Entity("TD.DanhGiaCanBo.Domain.Business.Screen", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("LastModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Ma")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("MoTa")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<bool?>("ShowActionInModal")
                        .HasColumnType("bit");

                    b.Property<bool?>("ShowActionInTable")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("Ma")
                        .HasDatabaseName("Idx_Screen");

                    b.ToTable("Screens", "Business");
                });

            modelBuilder.Entity("TD.DanhGiaCanBo.Domain.Business.ScreenAction", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ActionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ScreenId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ScreenId")
                        .HasDatabaseName("Idx_ScreenAction");

                    b.ToTable("ScreenActions", "Business");
                });

            modelBuilder.Entity("TD.DanhGiaCanBo.Domain.Business.TieuChiDanhGia", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("DiemLiet")
                        .HasColumnType("bit");

                    b.Property<bool?>("DiemThuong")
                        .HasColumnType("bit");

                    b.Property<bool?>("DiemTru")
                        .HasColumnType("bit");

                    b.Property<string>("DonViTinh")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool?>("DuocChamNhieuLan")
                        .HasColumnType("bit");

                    b.Property<string>("GhiChu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("JsonDiemLiet")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("JsonLienKet")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("KiemNhiem")
                        .HasColumnType("bit");

                    b.Property<Guid?>("LastModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("MaDayDu")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("VARCHAR");

                    b.Property<string>("MaDonVi")
                        .HasMaxLength(100)
                        .HasColumnType("VARCHAR");

                    b.Property<string>("MaKhoTieuChi")
                        .HasMaxLength(1000)
                        .HasColumnType("VARCHAR");

                    b.Property<string>("MaMauPhieuDanhGia")
                        .HasMaxLength(100)
                        .HasColumnType("VARCHAR");

                    b.Property<string>("MaTieuChi")
                        .HasMaxLength(100)
                        .HasColumnType("VARCHAR");

                    b.Property<string>("STT")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<int?>("SoLan")
                        .HasColumnType("int");

                    b.Property<bool>("SuDung")
                        .HasColumnType("bit");

                    b.Property<string>("TenTieuChi")
                        .HasMaxLength(400)
                        .HasColumnType("nvarchar(400)");

                    b.Property<string>("ThangDiem")
                        .HasMaxLength(10)
                        .HasColumnType("VARCHAR");

                    b.Property<int?>("ThuTu")
                        .HasColumnType("int");

                    b.Property<int?>("ThuTuHienThi")
                        .HasColumnType("int");

                    b.Property<bool?>("TieuChiLienKet")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("TieuChiDanhGias", "Business");
                });

            modelBuilder.Entity("TD.DanhGiaCanBo.Domain.Business.TrangThaiDanhGia", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("LaTrangThaiDonVi")
                        .HasColumnType("bit");

                    b.Property<Guid?>("LastModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Ma")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("VARCHAR");

                    b.Property<string>("Ten")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("TrangThaiDanhGias", "Business");
                });

            modelBuilder.Entity("TD.DanhGiaCanBo.Domain.Business.VetXuLyDanhGiaDonVi", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("LastModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("MaPhieu")
                        .HasMaxLength(50)
                        .HasColumnType("VARCHAR");

                    b.Property<string>("MaPhongBan")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("TaiKhoanXuLy")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("TenNguoiXuLy")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("TenThaoTac")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.ToTable("VetXuLyDanhGiaDonVis", "Business");
                });

            modelBuilder.Entity("TD.DanhGiaCanBo.Domain.Business.XepLoaiDanhGia", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<double>("DiemToiDa")
                        .HasColumnType("float");

                    b.Property<double>("DiemToiThieu")
                        .HasColumnType("float");

                    b.Property<Guid?>("LastModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Ma")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("VARCHAR");

                    b.Property<string>("MaBoTieuChi")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("VARCHAR");

                    b.Property<string>("Ten")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("TenBoTieuChi")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.ToTable("XepLoaiDanhGias", "Business");
                });

            modelBuilder.Entity("TD.DanhGiaCanBo.Domain.Catalog.APITichHop", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Input")
                        .HasMaxLength(5000)
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("LastModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("LoaiDichVu")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("LoaiQuanLy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Ma")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("MoTa")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("Output")
                        .HasMaxLength(5000)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhuongThuc")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<bool>("SuDung")
                        .HasColumnType("bit");

                    b.Property<string>("Ten")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Url")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.HasKey("Id");

                    b.ToTable("APITichHops", "Catalog");
                });

            modelBuilder.Entity("TD.DanhGiaCanBo.Domain.Catalog.Config", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Content")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("LastModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Module")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ten")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<int>("ThuTu")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Ten", "Code", "Module", "Active")
                        .HasDatabaseName("Idx_Config_Config");

                    b.ToTable("Configs", "Catalog");
                });

            modelBuilder.Entity("TD.DanhGiaCanBo.Domain.Catalog.DanhMucChung", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("DinhKem")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("DuocChamNhieuLan")
                        .HasColumnType("bit");

                    b.Property<Guid?>("LastModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("TenDanhMuc")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("ThuTu")
                        .HasColumnType("int");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("TenDanhMuc", "Code")
                        .HasDatabaseName("Idx_DanhMucChung_DanhMucChung_Name");

                    b.ToTable("DanhMucChungs", "Catalog");
                });

            modelBuilder.Entity("TD.DanhGiaCanBo.Domain.Catalog.Group", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("Catalog")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("FullCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GroupCode")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar");

                    b.Property<string>("GroupName")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<int?>("GroupOrder")
                        .HasColumnType("int");

                    b.Property<Guid?>("InChargeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("IsKhongDanhGia")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsKhongThongKe")
                        .HasColumnType("bit");

                    b.Property<Guid?>("LastModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("OfGroupCode")
                        .HasMaxLength(50)
                        .HasColumnType("varchar");

                    b.Property<string>("OfGroupId")
                        .HasMaxLength(36)
                        .HasColumnType("varchar");

                    b.Property<string>("OfGroupName")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("OtherCatalog")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar");

                    b.HasKey("Id");

                    b.HasIndex("GroupCode")
                        .HasDatabaseName("Idx_GroupCode");

                    b.HasIndex("GroupName")
                        .HasDatabaseName("Idx_GroupName");

                    b.HasIndex("OfGroupCode")
                        .HasDatabaseName("Idx_OfGroupCode");

                    b.HasIndex("GroupCode", "GroupName", "OfGroupCode")
                        .HasDatabaseName("Idx_Group_Search");

                    b.ToTable("Groups", "Catalog");
                });

            modelBuilder.Entity("TD.DanhGiaCanBo.Domain.Catalog.LogAPI", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("LastModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("LoaiDichVu")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("LoaiQuanLy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Ma")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Ten")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("TenAPI")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.HasKey("Id");

                    b.ToTable("LogAPIs", "Catalog");
                });

            modelBuilder.Entity("TD.DanhGiaCanBo.Domain.Catalog.Menu", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("FullPath")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("IconName")
                        .HasMaxLength(100)
                        .HasColumnType("varchar");

                    b.Property<bool?>("IsTopMenu")
                        .HasColumnType("bit");

                    b.Property<Guid?>("LastModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Module")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<Guid?>("ParentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Permission")
                        .HasMaxLength(600)
                        .HasColumnType("varchar");

                    b.Property<string>("TenMenu")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<int>("ThuTuMenu")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Active")
                        .HasDatabaseName("Idx_Menu_Menu_Active");

                    b.ToTable("Menus", "Catalog");
                });

            modelBuilder.Entity("TD.DanhGiaCanBo.Domain.Catalog.NhomNguoiDung", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("LastModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Ma")
                        .HasMaxLength(50)
                        .HasColumnType("varchar");

                    b.Property<string>("MoTa")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Ten")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("Id");

                    b.HasIndex("Ten")
                        .HasDatabaseName("Idx_NhomNguoiDung");

                    b.ToTable("NhomNguoiDungs", "Catalog");
                });

            modelBuilder.Entity("TD.DanhGiaCanBo.Domain.Catalog.TaiLieuHDSD", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("MoTa")
                        .IsRequired()
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<DateTime?>("NgayDang")
                        .HasColumnType("datetime2");

                    b.Property<string>("TaiLieuDanhCho")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("TenTaiLieu")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("TepDinhKem")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ThuTu")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DeletedOn")
                        .HasDatabaseName("Idx_TaiLieuHDSD_TaiLieuHDSD");

                    b.ToTable("TaiLieuHDSDs", "Catalog");
                });

            modelBuilder.Entity("TD.DanhGiaCanBo.Infrastructure.Auditing.Trail", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AffectedColumns")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("NewValues")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OldValues")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PrimaryKey")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TableName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenantId")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("DateTime")
                        .HasDatabaseName("IX_AuditTrails_DateTime");

                    b.HasIndex("UserId")
                        .HasDatabaseName("IX_AuditTrails_UserId");

                    b.ToTable("AuditTrails", "Auditing");

                    b.HasAnnotation("Finbuckle:MultiTenant", true);
                });

            modelBuilder.Entity("TD.DanhGiaCanBo.Infrastructure.Identity.ApplicationRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsAdmin")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsSupperAdmin")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("TenantId")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<int?>("ThuTu")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName", "TenantId")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("Roles", "Identity");

                    b.HasAnnotation("Finbuckle:MultiTenant", true);
                });

            modelBuilder.Entity("TD.DanhGiaCanBo.Infrastructure.Identity.ApplicationRoleClaim", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("TenantId")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("RoleClaims", "Identity");

                    b.HasAnnotation("Finbuckle:MultiTenant", true);
                });

            modelBuilder.Entity("TD.DanhGiaCanBo.Infrastructure.Identity.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("ForcePasswordChange")
                        .HasColumnType("bit");

                    b.Property<string>("FullName")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<Guid?>("LastModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("ObjectId")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("RefreshToken")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<DateTime>("RefreshTokenExpiryTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenantId")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("TypeUser")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<int>("UserOrder")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("TypeUser");

                    b.HasIndex("UserName")
                        .HasDatabaseName("Idx_UserName");

                    b.HasIndex("NormalizedUserName", "TenantId")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("Users", "Identity");

                    b.HasAnnotation("Finbuckle:MultiTenant", true);
                });

            modelBuilder.Entity("TD.DanhGiaCanBo.Infrastructure.Identity.Entities.ApplicationUserGroup", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ChucDanhId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ChucVuId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("GroupCode")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<bool>("IsDefault")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsKySo")
                        .HasColumnType("bit");

                    b.Property<bool?>("KhongDanhGia")
                        .HasColumnType("bit");

                    b.Property<bool?>("KiemNhiem")
                        .HasColumnType("bit");

                    b.Property<string>("MaPhieuDanhGia")
                        .HasMaxLength(450)
                        .HasColumnType("VARCHAR");

                    b.Property<string>("NoiDungKiemNhiem")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("OfficeCode")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<bool?>("ThamQuyenXepLoai")
                        .HasColumnType("bit");

                    b.Property<bool?>("TruongDonVi")
                        .HasColumnType("bit");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("UserOrder")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ChucDanhId");

                    b.HasIndex("ChucVuId");

                    b.HasIndex("GroupCode");

                    b.HasIndex("OfficeCode");

                    b.HasIndex("UserId", "OfficeCode", "ChucVuId")
                        .IsUnique()
                        .HasFilter("[ChucVuId] IS NOT NULL");

                    b.ToTable("ApplicationUserGroups", "Identity");
                });

            modelBuilder.Entity("TD.DanhGiaCanBo.Infrastructure.Identity.Entities.ApplicationUserGroupNhomNguoiDung", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("NhomNguoiDungId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UserGroupId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("NhomNguoiDungId");

                    b.HasIndex("UserGroupId");

                    b.ToTable("ApplicationUserGroupNhomNguoiDungs", "Identity");
                });

            modelBuilder.Entity("TD.DanhGiaCanBo.Infrastructure.Identity.Entities.ApplicationUserGroupRole", b =>
                {
                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("TenantId")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<Guid?>("UserGroupId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("RoleId", "UserId");

                    b.HasIndex("UserId");

                    b.ToTable("UserRoles", "Identity");

                    b.HasAnnotation("Finbuckle:MultiTenant", true);
                });

            modelBuilder.Entity("TD.DanhGiaCanBo.Infrastructure.Identity.Entities.VetXuLyDanhGia", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ApplicationUserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<Guid?>("BuocXuLyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("DanhGiaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("LaNguoiDaXuLy")
                        .HasColumnType("bit");

                    b.Property<string>("MaTrangThai")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("TaiKhoanXuLy")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("TenBuocXuLy")
                        .IsRequired()
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("TenNguoiXuLy")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("TenThaoTac")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("TenTrangThai")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<Guid>("TrangThaiDanhGiaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ApplicationUserId");

                    b.HasIndex("BuocXuLyId");

                    b.HasIndex("DanhGiaId");

                    b.HasIndex("TrangThaiDanhGiaId");

                    b.HasIndex("UserId");

                    b.ToTable("VetXuLyDanhGias", "Business");
                });

            modelBuilder.Entity("TD.DanhGiaCanBo.Infrastructure.Identity.Entities.VetXuLyDanhGiaToChuc", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("BuocXuLyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("DanhGiaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("LaNguoiDaXuLy")
                        .HasColumnType("bit");

                    b.Property<string>("MaTrangThai")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("TaiKhoanXuLy")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("TenBuocXuLy")
                        .IsRequired()
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("TenNguoiXuLy")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("TenThaoTac")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("TenTrangThai")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<Guid>("TrangThaiDanhGiaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("BuocXuLyId");

                    b.HasIndex("DanhGiaId");

                    b.HasIndex("TrangThaiDanhGiaId");

                    b.HasIndex("UserId");

                    b.ToTable("VetXuLyDanhGiaToChucs", "Business");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("TD.DanhGiaCanBo.Infrastructure.Identity.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("TD.DanhGiaCanBo.Infrastructure.Identity.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("TD.DanhGiaCanBo.Infrastructure.Identity.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("TD.DanhGiaCanBo.Domain.Business.BuocXuLy", b =>
                {
                    b.HasOne("TD.DanhGiaCanBo.Domain.Business.QuyTrinhXuLy", "QuyTrinhXuLy")
                        .WithMany("BuocXuLys")
                        .HasForeignKey("QuyTrinhXuLyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TD.DanhGiaCanBo.Domain.Business.TrangThaiDanhGia", "TrangThaiDanhGia")
                        .WithMany("BuocXuLys")
                        .HasForeignKey("TrangThaiDanhGiaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("QuyTrinhXuLy");

                    b.Navigation("TrangThaiDanhGia");
                });

            modelBuilder.Entity("TD.DanhGiaCanBo.Domain.Business.BuocXuLyChucDanh", b =>
                {
                    b.HasOne("TD.DanhGiaCanBo.Domain.Business.BuocXuLy", "BuocXuLy")
                        .WithMany("BuocXuLyChucDanhs")
                        .HasForeignKey("BuocXuLyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TD.DanhGiaCanBo.Domain.Business.ChucDanh", "ChucDanh")
                        .WithMany("BuocXuLys")
                        .HasForeignKey("ChucDanhId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BuocXuLy");

                    b.Navigation("ChucDanh");
                });

            modelBuilder.Entity("TD.DanhGiaCanBo.Domain.Business.BuocXuLyChucVu", b =>
                {
                    b.HasOne("TD.DanhGiaCanBo.Domain.Business.BuocXuLy", "BuocXuLy")
                        .WithMany("BuocXuLyChucVus")
                        .HasForeignKey("BuocXuLyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TD.DanhGiaCanBo.Domain.Business.ChucVu", "ChucVu")
                        .WithMany("BuocXuLys")
                        .HasForeignKey("ChucVuId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BuocXuLy");

                    b.Navigation("ChucVu");
                });

            modelBuilder.Entity("TD.DanhGiaCanBo.Domain.Business.BuocXuLyGroup", b =>
                {
                    b.HasOne("TD.DanhGiaCanBo.Domain.Business.BuocXuLy", "BuocXuLy")
                        .WithMany("DonVis")
                        .HasForeignKey("BuocXuLyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TD.DanhGiaCanBo.Domain.Business.NhomDonVi", "NhomDonVi")
                        .WithMany()
                        .HasForeignKey("NhomDonViId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BuocXuLy");

                    b.Navigation("NhomDonVi");
                });

            modelBuilder.Entity("TD.DanhGiaCanBo.Domain.Business.BuocXuLyNhomNguoiDung", b =>
                {
                    b.HasOne("TD.DanhGiaCanBo.Domain.Business.BuocXuLy", "BuocXuLy")
                        .WithMany("BuocXuLyNhomNguoiDungs")
                        .HasForeignKey("BuocXuLyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TD.DanhGiaCanBo.Domain.Catalog.NhomNguoiDung", "NhomNguoiDung")
                        .WithMany("BuocXuLyNhomNguoiDungs")
                        .HasForeignKey("NhomNguoiDungId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BuocXuLy");

                    b.Navigation("NhomNguoiDung");
                });

            modelBuilder.Entity("TD.DanhGiaCanBo.Domain.Business.ChucDanhMauPhieuDanhGia", b =>
                {
                    b.HasOne("TD.DanhGiaCanBo.Domain.Business.ChucDanh", "ChucDanh")
                        .WithMany("MauPhieuDanhGias")
                        .HasForeignKey("ChucDanhId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TD.DanhGiaCanBo.Domain.Business.MauPhieuDanhGia", "MauPhieuDanhGia")
                        .WithMany("ChucDanhs")
                        .HasForeignKey("MauPhieuDanhGiaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ChucDanh");

                    b.Navigation("MauPhieuDanhGia");
                });

            modelBuilder.Entity("TD.DanhGiaCanBo.Domain.Business.DanhGia", b =>
                {
                    b.HasOne("TD.DanhGiaCanBo.Infrastructure.Identity.ApplicationUser", null)
                        .WithMany("DanhGias")
                        .HasForeignKey("ApplicationUserId");

                    b.HasOne("TD.DanhGiaCanBo.Domain.Business.BuocXuLy", "BuocHienTai")
                        .WithMany("DanhGias")
                        .HasForeignKey("BuocHienTaiId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("TD.DanhGiaCanBo.Domain.Business.BuocXuLy", "BuocTruoc")
                        .WithMany()
                        .HasForeignKey("BuocTruocId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("BuocHienTai");

                    b.Navigation("BuocTruoc");
                });

            modelBuilder.Entity("TD.DanhGiaCanBo.Domain.Business.DanhGiaDonVi", b =>
                {
                    b.HasOne("TD.DanhGiaCanBo.Domain.Business.BuocXuLy", "BuocHienTai")
                        .WithMany()
                        .HasForeignKey("BuocHienTaiId");

                    b.HasOne("TD.DanhGiaCanBo.Domain.Business.BuocXuLy", "BuocTruoc")
                        .WithMany()
                        .HasForeignKey("BuocTruocId");

                    b.Navigation("BuocHienTai");

                    b.Navigation("BuocTruoc");
                });

            modelBuilder.Entity("TD.DanhGiaCanBo.Domain.Business.DanhSachNhomDonVi", b =>
                {
                    b.HasOne("TD.DanhGiaCanBo.Domain.Catalog.Group", "Group")
                        .WithMany()
                        .HasForeignKey("GroupCode")
                        .HasPrincipalKey("GroupCode")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TD.DanhGiaCanBo.Domain.Business.NhomDonVi", "NhomDonVi")
                        .WithMany("danhSachNhomDonVis")
                        .HasForeignKey("NhomDonViId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Group");

                    b.Navigation("NhomDonVi");
                });

            modelBuilder.Entity("TD.DanhGiaCanBo.Domain.Business.DonViSuDungQuyTrinhXuLy", b =>
                {
                    b.HasOne("TD.DanhGiaCanBo.Domain.Catalog.Group", "DonVi")
                        .WithMany("QuyTrinhXuLys")
                        .HasForeignKey("OfficeCode")
                        .HasPrincipalKey("GroupCode")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TD.DanhGiaCanBo.Domain.Business.QuyTrinhXuLy", "QuyTrinhXuLy")
                        .WithMany("DonVis")
                        .HasForeignKey("QuyTrinhXuLyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DonVi");

                    b.Navigation("QuyTrinhXuLy");
                });

            modelBuilder.Entity("TD.DanhGiaCanBo.Domain.Business.LienKetBuocXuLy", b =>
                {
                    b.HasOne("TD.DanhGiaCanBo.Domain.Business.QuyTrinhXuLy", "QuyTrinhXuLy")
                        .WithMany("LienKetBuocXuLys")
                        .HasForeignKey("QuyTrinhXuLyId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("TD.DanhGiaCanBo.Domain.Business.BuocXuLy", "BuocXuLySource")
                        .WithMany("Sources")
                        .HasForeignKey("Source")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("TD.DanhGiaCanBo.Domain.Business.BuocXuLy", "BuocXuLyTarget")
                        .WithMany("Targets")
                        .HasForeignKey("Target")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("BuocXuLySource");

                    b.Navigation("BuocXuLyTarget");

                    b.Navigation("QuyTrinhXuLy");
                });

            modelBuilder.Entity("TD.DanhGiaCanBo.Infrastructure.Identity.ApplicationRoleClaim", b =>
                {
                    b.HasOne("TD.DanhGiaCanBo.Infrastructure.Identity.ApplicationRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("TD.DanhGiaCanBo.Infrastructure.Identity.Entities.ApplicationUserGroup", b =>
                {
                    b.HasOne("TD.DanhGiaCanBo.Domain.Business.ChucDanh", "ChucDanh")
                        .WithMany()
                        .HasForeignKey("ChucDanhId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("TD.DanhGiaCanBo.Domain.Business.ChucVu", "ChucVu")
                        .WithMany()
                        .HasForeignKey("ChucVuId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("TD.DanhGiaCanBo.Domain.Catalog.Group", "PhongBan")
                        .WithMany()
                        .HasForeignKey("GroupCode")
                        .HasPrincipalKey("GroupCode")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("TD.DanhGiaCanBo.Domain.Catalog.Group", "Group")
                        .WithMany()
                        .HasForeignKey("OfficeCode")
                        .HasPrincipalKey("GroupCode")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("TD.DanhGiaCanBo.Infrastructure.Identity.ApplicationUser", "User")
                        .WithMany("ApplicationUserGroups")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("ChucDanh");

                    b.Navigation("ChucVu");

                    b.Navigation("Group");

                    b.Navigation("PhongBan");

                    b.Navigation("User");
                });

            modelBuilder.Entity("TD.DanhGiaCanBo.Infrastructure.Identity.Entities.ApplicationUserGroupNhomNguoiDung", b =>
                {
                    b.HasOne("TD.DanhGiaCanBo.Domain.Catalog.NhomNguoiDung", "NhomNguoiDung")
                        .WithMany()
                        .HasForeignKey("NhomNguoiDungId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TD.DanhGiaCanBo.Infrastructure.Identity.Entities.ApplicationUserGroup", "User")
                        .WithMany("ApplicationUserGroupNhomNguoiDungs")
                        .HasForeignKey("UserGroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("NhomNguoiDung");

                    b.Navigation("User");
                });

            modelBuilder.Entity("TD.DanhGiaCanBo.Infrastructure.Identity.Entities.ApplicationUserGroupRole", b =>
                {
                    b.HasOne("TD.DanhGiaCanBo.Infrastructure.Identity.ApplicationRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TD.DanhGiaCanBo.Infrastructure.Identity.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("TD.DanhGiaCanBo.Infrastructure.Identity.Entities.VetXuLyDanhGia", b =>
                {
                    b.HasOne("TD.DanhGiaCanBo.Infrastructure.Identity.ApplicationUser", null)
                        .WithMany("VetXuLyDanhGias")
                        .HasForeignKey("ApplicationUserId");

                    b.HasOne("TD.DanhGiaCanBo.Domain.Business.BuocXuLy", "BuocXuLy")
                        .WithMany()
                        .HasForeignKey("BuocXuLyId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("TD.DanhGiaCanBo.Domain.Business.DanhGia", "DanhGia")
                        .WithMany()
                        .HasForeignKey("DanhGiaId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("TD.DanhGiaCanBo.Domain.Business.TrangThaiDanhGia", "TrangThaiDanhGia")
                        .WithMany()
                        .HasForeignKey("TrangThaiDanhGiaId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("TD.DanhGiaCanBo.Infrastructure.Identity.Entities.ApplicationUserGroup", "User")
                        .WithMany("VetXuLyDanhGias")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("BuocXuLy");

                    b.Navigation("DanhGia");

                    b.Navigation("TrangThaiDanhGia");

                    b.Navigation("User");
                });

            modelBuilder.Entity("TD.DanhGiaCanBo.Infrastructure.Identity.Entities.VetXuLyDanhGiaToChuc", b =>
                {
                    b.HasOne("TD.DanhGiaCanBo.Domain.Business.BuocXuLy", "BuocXuLy")
                        .WithMany()
                        .HasForeignKey("BuocXuLyId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("TD.DanhGiaCanBo.Domain.Business.DanhGiaDonVi", "DanhGia")
                        .WithMany()
                        .HasForeignKey("DanhGiaId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("TD.DanhGiaCanBo.Domain.Business.TrangThaiDanhGia", "TrangThaiDanhGia")
                        .WithMany()
                        .HasForeignKey("TrangThaiDanhGiaId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("TD.DanhGiaCanBo.Infrastructure.Identity.Entities.ApplicationUserGroup", "User")
                        .WithMany("VetXuLyDanhGiaToChucs")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("BuocXuLy");

                    b.Navigation("DanhGia");

                    b.Navigation("TrangThaiDanhGia");

                    b.Navigation("User");
                });

            modelBuilder.Entity("TD.DanhGiaCanBo.Domain.Business.BuocXuLy", b =>
                {
                    b.Navigation("BuocXuLyChucDanhs");

                    b.Navigation("BuocXuLyChucVus");

                    b.Navigation("BuocXuLyNhomNguoiDungs");

                    b.Navigation("DanhGias");

                    b.Navigation("DonVis");

                    b.Navigation("Sources");

                    b.Navigation("Targets");
                });

            modelBuilder.Entity("TD.DanhGiaCanBo.Domain.Business.ChucDanh", b =>
                {
                    b.Navigation("BuocXuLys");

                    b.Navigation("MauPhieuDanhGias");
                });

            modelBuilder.Entity("TD.DanhGiaCanBo.Domain.Business.ChucVu", b =>
                {
                    b.Navigation("BuocXuLys");
                });

            modelBuilder.Entity("TD.DanhGiaCanBo.Domain.Business.MauPhieuDanhGia", b =>
                {
                    b.Navigation("ChucDanhs");
                });

            modelBuilder.Entity("TD.DanhGiaCanBo.Domain.Business.NhomDonVi", b =>
                {
                    b.Navigation("danhSachNhomDonVis");
                });

            modelBuilder.Entity("TD.DanhGiaCanBo.Domain.Business.QuyTrinhXuLy", b =>
                {
                    b.Navigation("BuocXuLys");

                    b.Navigation("DonVis");

                    b.Navigation("LienKetBuocXuLys");
                });

            modelBuilder.Entity("TD.DanhGiaCanBo.Domain.Business.TrangThaiDanhGia", b =>
                {
                    b.Navigation("BuocXuLys");
                });

            modelBuilder.Entity("TD.DanhGiaCanBo.Domain.Catalog.Group", b =>
                {
                    b.Navigation("QuyTrinhXuLys");
                });

            modelBuilder.Entity("TD.DanhGiaCanBo.Domain.Catalog.NhomNguoiDung", b =>
                {
                    b.Navigation("BuocXuLyNhomNguoiDungs");
                });

            modelBuilder.Entity("TD.DanhGiaCanBo.Infrastructure.Identity.ApplicationUser", b =>
                {
                    b.Navigation("ApplicationUserGroups");

                    b.Navigation("DanhGias");

                    b.Navigation("VetXuLyDanhGias");
                });

            modelBuilder.Entity("TD.DanhGiaCanBo.Infrastructure.Identity.Entities.ApplicationUserGroup", b =>
                {
                    b.Navigation("ApplicationUserGroupNhomNguoiDungs");

                    b.Navigation("VetXuLyDanhGiaToChucs");

                    b.Navigation("VetXuLyDanhGias");
                });
#pragma warning restore 612, 618
        }
    }
}
